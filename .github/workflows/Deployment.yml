name: Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run CD Checks
        uses: ./.github/actions/cd-checks

      - name: Deploy to Render
        run: |
          RESPONSE=$(curl -s -w "%{http_code}" -o response.json -X POST "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "branch": "development",
              "environment": "Production",
              "message": "Deploying from GitHub Actions"
            }')
          cat response.json
          if grep -q '"message":"not found' response.json; then
            echo "Deployment failed: Service not found!"
            exit 1
          elif [ "$RESPONSE" -ge 400 ]; then
            echo "Deployment failed with HTTP status $RESPONSE"
            exit 1
          else
            echo "Deployment successful!"
          fi
      
      - name: Publish New Git Tag Reading python version for this project
        run: |
          echo "Checking project versioning..."
          PROJECT_VERSION=$(cat ./src/__init__.py | grep -oP '(?<=__version__ = ")[^"]*')
          # Publish to git the tag via bash
          git publish --tags --message "Release $PROJECT_VERSION" --tag "$PROJECT_VERSION" || echo "No git tags found. Please create a tag before running this workflow."
          git fetch --tags --unshallow || git fetch --tags
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "")
          # Log tag and version published
          echo "project_version=$PROJECT_VERSION" >> $GITHUB_OUTPUT
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Workflow resume
        run: |
          REPO_URL="https://github.com/${{ github.repository }}"
          RENDER_DEPLOY_URL="https://dashboard.render.com/deploy/${{ secrets.RENDER_SERVICE_ID }}"
          echo "# 🎉 Workflow Execution Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🚀 Deployment Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| 🌐 Render Service | 🔗 Deployment URL |" >> $GITHUB_STEP_SUMMARY
          echo "|:-----------------:|:------------------:|" >> $GITHUB_STEP_SUMMARY
          echo "| [Service]($RENDER_DEPLOY_URL) | [View Deployment]($RENDER_DEPLOY_URL) |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📜 Deployment Logs" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| 🌐 Dashboard Render URL | 🌍 Environment Deployed | 🌿 Branch Deployed From |" >> $GITHUB_STEP_SUMMARY
          echo "|:-----------------------:|:----------------------:|:-----------------------:|" >> $GITHUB_STEP_SUMMARY
          echo "| [Render Dashboard]($RENDER_DEPLOY_URL) | [Production]($RENDER_DEPLOY_URL) | $GITHUB_REF |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
